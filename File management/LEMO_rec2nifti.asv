clear all 
%% MRI RAW DATA
%==========================================================================
% - Convert to nifti
% - Arrange in folders 
% - Copy and get realignment plots and RP parameters
scriptRec2nifti = 'N:\studies\Grapholemo\Methods\Scripts\grapholemo\MR_utils\rec2nifti.pl';
rawSourcePath = 'O:\studies\grapholemo\raw\mrz_transfer\';
rawDestinationPath = 'O:\studies\grapholemo\raw\';
saverealign=1;

files = dir([rawSourcePath,'\*.rec']);
selectedFiles = {}; % If selected files = {} a  window for selection will popup (or you can give a filename)
 if isempty(selectedFiles)
     prompttxt = ['Select one or several files from:  ',rawSourcePath];
      %[indices, values] = listdlg('PromptString',prompttxt,'ListString', {files.name});       
     [indices, values] = listdlg('PromptString',prompttxt,'ListString', {files.name},'ListSize',[5*length(prompttxt), 20*length({files.name}) ]); % popup       
     selectedFiles = {files(indices).name};
 end   
%%
subject = {'g001'};
 
for s= 1:length(subject)
    currSubj = subject{s};
    files = dir([rawSourcePath,'\*_',currSubj,'_*']);
    
    for i = 1:length(recParNames)
        %Define destination folders according to file type
        destinationFolder = [rawDestinationPath,'\',currSubj];
             if (contains(recParNames{i},'t13d'))
                  destinationFolder =  [destinationFolder,'\mri\anat\parrec'];    
             elseif (contains(recParNames{i},'audiotestsoft'))
                   destinationFolder =  [destinationFolder,'\mri\func\audiotest\parrec'];    
             elseif (contains(recParNames{i},'b0_'))
                   destinationFolder =  [destinationFolder,'\mri\func\b0\parrec'];
             elseif (contains(recParNames{i},'fbl_parta'))
                   destinationFolder =  [destinationFolder,'\mri\func\FBL_partA\parrec'];
              elseif (contains(recParNames{i},'fbl_partb'))
                   destinationFolder =  [destinationFolder,'\mri\func\FBL_partB\parrec'];
                elseif (contains(recParNames{i},'symcontrol'))
                   destinationFolder =  [destinationFolder,'\mri\func\symcontrol\parrec'];
             end           
                  
             % Find files in source and copy to destination
              sfiles = [dir([rawSourcePath,'\*_',currSubj,'_*',recParNames{i},'*.par']),dir([rawSourcePath,'\*_',currSubj,'_*',recParNames{i},'*.rec'])];  
               if ~isempty(sfiles)
                    mkdir(destinationFolder);
                    for ii = 1:length(sfiles)
                      copyfile([sfiles(ii).folder,'\',sfiles(ii).name],[destinationFolder,'\',sfiles(ii).name]); %
                      disp(['copied ',sfiles(ii).name, 'to ',destinationFolder]) 
                                              
                      %IF it is .rec convert to nifti
                      if  contains(sfiles(ii).name,'rec')
                           disp(['converting ',sfiles(ii).name,' to nifti']) 
                           cd (destinationFolder)
                          perl(scriptRec2nifti,'-s',[destinationFolder,'\',sfiles(ii).name])
                          %Move to nifti folder
                          newNiftiFiles = dir([destinationFolder,'\*.nii']);
                           mkdir(strrep(destinationFolder,'parrec','nifti'))
                           for iii =1:length(newNiftiFiles)
                              movefile([newNiftiFiles(iii).folder,'\',newNiftiFiles(iii).name],strrep(newNiftiFiles(iii).folder,'parrec','nifti'));
                           end
                       end
                    end
               else     
               end
    end 
end

%% DO realignment in niftis (copy, realign, delet copy
if saverealign ==1
  for s= 1:length(subject)
   currSubj = subject{s};
        niftis = dir([rawDestinationPath,'\**\nifti\**soft*']);
        for f = 1:length(niftis)
               destinationFolder = strrep(niftis(f).folder,'nifti','realign_check');
               mkdir(destinationFolder)
               copyfile([niftis(f).folder,'\',niftis(f).name],[destinationFolder,'\',niftis(f).name])     
               % Do realignment and save plots
                cd (destinationFolder)
                nVols = length(spm_vol([destinationFolder,'\',niftis(f).name])); % See how many volumes this file has 
                volseq = 1:nVols;
                listVols = cellstr(strcat(repmat(niftis(f).name,nVols,1),',',arrayfun(@(volseq) sprintf('%02d',volseq),volseq,'un',0)')); %This list has one column and as many rows as volumes, each has the file name and the volume index separated by comma
                %prepare batch
                matlabbatch{1}.spm.spatial.realign.estimate.data = { listVols}'; % uses the list of volumes as input
                matlabbatch{1}.spm.spatial.realign.estimate.eoptions.quality = 0.9;
                matlabbatch{1}.spm.spatial.realign.estimate.eoptions.sep = 4;
                matlabbatch{1}.spm.spatial.realign.estimate.eoptions.fwhm = 5;
                matlabbatch{1}.spm.spatial.realign.estimate.eoptions.rtm = 1;
                matlabbatch{1}.spm.spatial.realign.estimate.eoptions.interp = 2;
                matlabbatch{1}.spm.spatial.realign.estimate.eoptions.wrap = [0 0 0];
                matlabbatch{1}.spm.spatial.realign.estimate.eoptions.weight = '';

                % RUN batch
                 spm_jobman('run',matlabbatch);
                clear matlabbatch
                %Bring figure to the front
                spm_figure('GetWin','Graphics'); 
                figure(gcf)
                % save plot
                gcf
                saveas(gcf,strrep(['FIG_',num2str(nVols),'vols_',niftis(f).name],'.nii','.jpg'))
                % remove nifti file from realignment check
                tmpfiles = [dir([destinationFolder,'\*.mat']);dir([destinationFolder,'\*.nii']);dir([destinationFolder,'\*.ps'])];
                if ~isempty(tmpfiles)
                    cd (destinationFolder)
                    cellfun(@delete, {tmpfiles.name})
                end
        end
  end
        else
end