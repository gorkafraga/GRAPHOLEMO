logfolder <-  'O:/studies/grapholemo/analysis/LEMO_GFG/mri/1stLevel'
logfolder
#Clear all and Load libraries
rm(list=ls(all=TRUE)) # remove all variables (!)
Packages <- c("readr","tidyr","dplyr","viridis","data.table","BH")
lapply(Packages, require, character.only = TRUE)
#=====================================================================================
# GATHER DATA  + FORMAT FOR MODEL (in STAN)
#=====================================================================================
# - Read task logs used in MRI analysis
# - Concatenate all text files (given they have 40 trials)
# - Trim trials with no response ("too slow trials")
# - Select columns and code new ones needed for model in Stan
# - Save formatted and gathered data as txt file
# REFS: e.g. From Pederson et al.,2017 https://github.com/gbiele/RLDDM/blob/master/RLDDM.jags.txt
#--------------------------------------------------------------------------------------------
#set dirs
logfolder <-  'O:/studies/grapholemo/analysis/LEMO_GFG/mri/1stLevel'
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/beh/stats_modeling/'
masterfile  <- "O:/studies/grapholemo/LEMO_Master.xlsx" # use this to find your subjects
#Some starting info
nblocks <- 2
ntrials <- 40             # trials per block
stims_per_block <- 4      # number of stimuli to be learned per block
RTbound <- 0.150         # set a limit for implausibly fast responses  (previously 150 ms)
taskpattern<- "FeedLearn_MRI"
taskpattern
# GATHER DATA  + FORMAT FOR MODEL (in STAN)
#=====================================================================================
# - Read task logs used in MRI analysis
# - Concatenate all text files (given they have 40 trials)
# - Trim trials with no response ("too slow trials")
# - Select columns and code new ones needed for model in Stan
# - Save formatted and gathered data as txt file
# REFS: e.g. From Pederson et al.,2017 https://github.com/gbiele/RLDDM/blob/master/RLDDM.jags.txt
#--------------------------------------------------------------------------------------------
#set dirs
logfolder <-  'O:/studies/grapholemo/analysis/LEMO_GFG/mri/1stLevel/FBL_A/'
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/beh/modeling/'
masterfile  <- "O:/studies/grapholemo/LEMO_Master.xlsx" # use this to find your subjects
#Some initial info
nblocks <- 2
ntrials <- 40             # trials per block
stims_per_block <- 4      # number of stimuli to be learned per block
RTbound <- 0.150         # set a limit for implausibly fast responses  (previously 150 ms)
taskpattern<- "FeedLearn_MRI"
dir(logfolder,'*.txt',recursive=TRUE)
# GATHER DATA  + FORMAT FOR MODEL (in STAN)
#=====================================================================================
# - Read task logs used in MRI analysis
# - Concatenate all text files (given they have 40 trials)
# - Trim trials with no response ("too slow trials")
# - Select columns and code new ones needed for model in Stan
# - Save formatted and gathered data as txt file
# REFS: e.g. From Pederson et al.,2017 https://github.com/gbiele/RLDDM/blob/master/RLDDM.jags.txt
#--------------------------------------------------------------------------------------------
#set dirs
logfolder <-  'O:/studies/grapholemo/analysis/LEMO_GFG/mri/preprocessing/fbl_A/'
dir(logfolder,'*.txt',recursive=TRUE)
dir(logfolder,'/logs/*.txt',recursive=TRUE)
dir(logfolder,'*/logs/*.txt',recursive=TRUE)
dir(logfolder,'**/logs/*.txt',recursive=TRUE)
dir(logfolder,'*logs*.txt',recursive=TRUE)
dir(logfolder,'*logs*',recursive=TRUE)
dir(logfolder,'*logs*.*.txt',recursive=TRUE)
dir(logfolder,'*logs*..txt',,recursive=TRUE)
dir(logfolder,'*logs*\\*.txt',,recursive=TRUE)
dir(logfolder,'*(logs).*\\.txt$',,recursive=TRUE)
dir(logfolder,'*.txt$',,recursive=TRUE)
dir(logfolder,'*.txt$',,recursive=TRUE) %>% dir(,"*logs*")
dir(logfolder,'*.txt$',,recursive=TRUE) %>% dir(.,"*logs*")
dir(logfolder,'*.txt$',,recursive=TRUE) %>% dir(.,"*logs*",all.files = T)
dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% dir(.,"*logs*",all.files = T)
dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% dir(.,"*logs*")
dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% dir("*logs*")
x <- dir(logfolder,'*.txt$',all.files=T,recursive=TRUE)
x
grep(x,'*logs*')
grep(x,'*.logs.*')
grep('*.logs.*'.x)
grep('*.logs.*',x)
x %>% grep('*.logs.*')
x %>% grep('*.logs.*',.)
dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% grep("*logs*",.)
dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% .[grep("*logs*",.)]
# Find log files
files <- dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% .[grep("*logs*",.)]
files[1]
sapply()
sapply(strsplit(files,'/'),'[['))
sapply(strsplit(files,'/'),'[[')
sapply(strsplit(files,'/'),'[')
sapply(strsplit(files,'/'),'[1')
sapply(strsplit(files,'/'),'[',1)
unique(sapply(strsplit(files,'/'),'[',1))
firstlevelfolder <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/1stLevel/FBL_A'
firstlevelfolder
firstlevelfolder
dir(subjects)
dir(firstlevelfolder)
dir(firstlevelfolder,pattern='s6*.nii',recursive=T)
dir(firstlevelfolder,pattern='*.nii',recursive=T)
dir(firstlevelfolder,pattern='*beta*.nii',recursive=T)
dir(firstlevelfolder,pattern='*beta.*.nii',recursive=T)
dir(firstlevelfolder,pattern='*sw6.*.nii',recursive=T)
dir(firstlevelfolder,pattern='*Frame.*.txt',recursive=T)
dir(firstlevelfolder,pattern='frame.*.txt',recursive=T)
dir(firstlevelfolder,pattern='frame.*.csv,recursive=T)
dir(firstlevelfolder,pattern='frame.*.csv',recursive=T)
dir(firstlevelfolder,pattern='*.csv',recursive=T)
dir(firstlevelfolder,pattern='*.jpg',recursive=T)
dir(firstlevelfolder,pattern='*.nii",recursive=T)
dir(firstlevelfolder,pattern='*.nii',recursive=T)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% sapply(strsplit(.),'[',2)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% sapply(strsplit(.,'/'),'[',2)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% sapply(.,strsplit(.,'/'),'[',2)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% sapply(strsplit(.,'/'),'[',2)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% sapply(strsplit(.,split = "/"),'[',2)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% strsplit(.,split = "/")
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% strsplit(.,split = "/") %>% sapply(.,'[',2)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% sapply(strsplit(.,split = "/"),'[',2) %>% unique(.)
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% strsplit(.,split = "/") %>% sapply(.,'[',2) %>% unique(.)
firstlevelfolder
# Find log files
files <- dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% .[grep("*logs*",.)]
# find subject IDs, assuming the 2nd subfolder level firstlevelfolder are the subject IDs
subjects <- dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T) %>% strsplit(.,split = "/") %>% sapply(.,'[',2) %>% unique(.)
subjects
dir(firstlevelfolder,pattern='*spmT.*.nii',recursive=T)
dir(logfolder,pattern='*spmT.*.nii',recursive=T) %>% strsplit(.,split = "/") %>% sapply(.,'[',2) %>% unique(.)
dir(logfolder,pattern='*sw6.*.nii',recursive=T)
dir(logfolder,pattern='*s6.*.nii',recursive=T)
dir(logfolder,pattern='*block.*.txt',recursive=T)
files
length(subjects)
files <- dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% .[grep("*xxx*",.)]
files
length(files)
which(files %in% subjects)
subjects
files
# Find log files
files <- dir(logfolder,'*.txt$',all.files=T,recursive=TRUE) %>% .[grep("*logs*",.)]
files
which(files %in% subjects)
which(subjects %in% files)
which(subjects %in% sapply(strsplit(files,'/'),'[',1))
selectedfiles <- files[which(subjects %in% sapply(strsplit(files,'/'),'[',1))]
