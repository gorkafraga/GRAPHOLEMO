ds <- Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")) %>%
group_by(.) %>%
group_split(., task)
ds
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task"))
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task"))
cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
######################################################
# CREATE TABLE WITH ACCU DATA
rbind(
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task"))
cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
)
######################################################
# CREATE TABLE WITH ACCU DATA
rbind(
######################################################
# CREATE TABLE WITH ACCU DATA
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task"))
######################################################
# CREATE TABLE WITH ACCU DATA
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task"))
######################################################
# CREATE TABLE WITH ACCU DATA
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
rbind(.,cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task"))))
cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
totalds
colnames(totalds)[1] <- 'third'
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
rbind(.,totalds)
ds <-
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds
78*3*2
rm(list=ls(all=TRUE))  #clears all!
Packages <- c("nlme","emmeans","haven","ggplotify","dplyr","readxl") #Load libraries (you mast install packages before)
lapply(Packages, library, character.only = TRUE)
source('N:/studies/Grapholemo/Methods/Scripts/grapholemo/BEH_performance/LEMO_Func_LMM_outliers.R') # read function
#--------------------------------------------------------------------------------------------------------------
#  TABLE WITH DESCRIPTIVES
# - Read data in long format
# - Gather descriptives and save in table
#--------------------------------------------------------------------------------------------------------------
# Edit Paths
dirinput <- "O:/studies/grapholemo/analysis/LEMO_GFG/beh/"
diroutput <-  "O:/studies/grapholemo/analysis/LEMO_GFG/beh/stats/LMM_R/"
dir.create(diroutput)
# File to read
fileinput <- "LEMO_beh_fbl_long.sav"
# READ DATA
raw <- haven::read_sav(paste0(dirinput,'/',fileinput))
raw <- as.data.frame(raw)
#Prepare dataset for analysis
dat <- raw # work on a copy, keep original dataset
#Filter data (use dplyr::filteruse):
dat <- dplyr::filter(dat , (fb == 1) )
dat <- dplyr::filter(dat , (task == taskpart) )
dat <- dplyr::filter(dat , !is.na(third))
# Ensure format of your variables (as.factor or as.numeric)
dat$proportionPerThird <- as.numeric(dat$proportionPerThird  )
dat$meanRT <- as.numeric(dat$meanRT)
dat$subjID <- as.factor(dat$subjID)
dat$third    <- as.factor(dat$third)
dat$task   <- as.factor(dat$task)
dat$block   <- as.factor(dat$block)
######################################################
# CREATE TABLE WITH ACCU DATA
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds_gathered <-   cbind(c(rep('fbl_a',3),rep('fbl_b',3)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
colnames(ds_gathered)[1] <- 'task'
ds_gathered$summary <- paste(ds_gathered[,3],ds_gathered[,4],sep='(') %>% paste(.,')',sep="")
writexl::write_xlsx(ds_gathered,paste0(diroutput,"/Table_accu_acrossBlocks.xlsx")) #save in file
# CREATE TABLE WITH RT
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="meanRT",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="meanRT",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
colnames(ds_gathered)[1] <- 'task'
ds_gathered$summary <- paste(ds_gathered[,3],ds_gathered[,4],sep='(') %>% paste(.,')',sep="")
writexl::write_xlsx(ds_gathered,paste0(diroutput,"/Table_RTs_acrossBlocks.xlsx")) #save in file
rm(list=ls(all=TRUE))  #clears all!
Packages <- c("nlme","emmeans","haven","ggplotify","dplyr","readxl") #Load libraries (you mast install packages before)
lapply(Packages, library, character.only = TRUE)
source('N:/studies/Grapholemo/Methods/Scripts/grapholemo/BEH_performance/LEMO_Func_LMM_outliers.R') # read function
#--------------------------------------------------------------------------------------------------------------
#  TABLE WITH DESCRIPTIVES
# - Read data in long format
# - Gather descriptives and save in table
#--------------------------------------------------------------------------------------------------------------
# Edit Paths
dirinput <- "O:/studies/grapholemo/analysis/LEMO_GFG/beh/"
diroutput <-  "O:/studies/grapholemo/analysis/LEMO_GFG/beh/stats/LMM_R/"
dir.create(diroutput)
# File to read
fileinput <- "LEMO_beh_fbl_long.sav"
# READ DATA
raw <- haven::read_sav(paste0(dirinput,'/',fileinput))
raw <- as.data.frame(raw)
#Prepare dataset for analysis
dat <- raw # work on a copy, keep original dataset
#Filter data (use dplyr::filteruse):
dat <- dplyr::filter(dat , (fb == 1) )
dat <- dplyr::filter(dat , (task == taskpart) )
dat <- dplyr::filter(dat , !is.na(third))
# Ensure format of your variables (as.factor or as.numeric)
dat$proportionPerThird <- as.numeric(dat$proportionPerThird  )
dat$meanRT <- as.numeric(dat$meanRT)
dat$subjID <- as.factor(dat$subjID)
dat$third    <- as.factor(dat$third)
dat$task   <- as.factor(dat$task)
dat$block   <- as.factor(dat$block)
######################################################
# CREATE TABLE WITH ACCU DATA
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds_gathered <-   cbind(c(rep('fbl_a',3),rep('fbl_b',3)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
colnames(ds_gathered)[1] <- 'task'
ds_gathered$summary <- paste(ds_gathered[,3],ds_gathered[,4],sep='(') %>% paste(.,')',sep="")
writexl::write_xlsx(ds_gathered,paste0(diroutput,"/Table_accu_acrossBlocks.xlsx")) #save in file
# CREATE TABLE WITH RT
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="meanRT",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="meanRT",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds_gathered <-   cbind(c(rep('fbl_a',3),rep('fbl_b',3)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
colnames(ds_gathered)[1] <- 'task'
ds_gathered$summary <- paste(ds_gathered[,3],ds_gathered[,4],sep='(') %>% paste(.,')',sep="")
writexl::write_xlsx(ds_gathered,paste0(diroutput,"/Table_RTs_acrossBlocks.xlsx")) #save in file
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds_gathered <-   cbind(c(rep('fbl_a',3),rep('fbl_b',3)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
ds
ds_gathered <-   cbind(c(rep('fbl_a',4),rep('fbl_b',4)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
ds_gathered
rm(list=ls(all=TRUE))  #clears all!
Packages <- c("nlme","emmeans","haven","ggplotify","dplyr","readxl") #Load libraries (you mast install packages before)
lapply(Packages, library, character.only = TRUE)
source('N:/studies/Grapholemo/Methods/Scripts/grapholemo/BEH_performance/LEMO_Func_LMM_outliers.R') # read function
#--------------------------------------------------------------------------------------------------------------
#  TABLE WITH DESCRIPTIVES
# - Read data in long format
# - Gather descriptives and save in table
#--------------------------------------------------------------------------------------------------------------
# Edit Paths
dirinput <- "O:/studies/grapholemo/analysis/LEMO_GFG/beh/"
diroutput <-  "O:/studies/grapholemo/analysis/LEMO_GFG/beh/stats/LMM_R/"
dir.create(diroutput)
# File to read
fileinput <- "LEMO_beh_fbl_long.sav"
# READ DATA
raw <- haven::read_sav(paste0(dirinput,'/',fileinput))
raw <- as.data.frame(raw)
#Prepare dataset for analysis
dat <- raw # work on a copy, keep original dataset
#Filter data (use dplyr::filteruse):
dat <- dplyr::filter(dat , (fb == 1) )
dat <- dplyr::filter(dat , (task == taskpart) )
dat <- dplyr::filter(dat , !is.na(third))
# Ensure format of your variables (as.factor or as.numeric)
dat$proportionPerThird <- as.numeric(dat$proportionPerThird  )
dat$meanRT <- as.numeric(dat$meanRT)
dat$subjID <- as.factor(dat$subjID)
dat$third    <- as.factor(dat$third)
dat$task   <- as.factor(dat$task)
dat$block   <- as.factor(dat$block)
######################################################
# CREATE TABLE WITH ACCU DATA
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds_gathered <-   cbind(c(rep('fbl_a',4),rep('fbl_b',4)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
colnames(ds_gathered)[1] <- 'task'
ds_gathered$summary <- paste(ds_gathered[,3],ds_gathered[,4],sep='(') %>% paste(.,')',sep="")
writexl::write_xlsx(ds_gathered,paste0(diroutput,"/Table_accu_acrossBlocks.xlsx")) #save in file
# CREATE TABLE WITH RT
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="meanRT",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="meanRT",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds_gathered <-   cbind(c(rep('fbl_a',4),rep('fbl_b',4)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
colnames(ds_gathered)[1] <- 'task'
ds_gathered$summary <- paste(ds_gathered[,3],ds_gathered[,4],sep='(') %>% paste(.,')',sep="")
writexl::write_xlsx(ds_gathered,paste0(diroutput,"/Table_RTs_acrossBlocks.xlsx")) #save in file
rm(list=ls(all=TRUE))  #clears all!
Packages <- c("nlme","emmeans","haven","ggplotify","dplyr","readxl") #Load libraries (you mast install packages before)
lapply(Packages, library, character.only = TRUE)
source('N:/studies/Grapholemo/Methods/Scripts/grapholemo/BEH_performance/LEMO_Func_LMM_outliers.R') # read function
#--------------------------------------------------------------------------------------------------------------
#  TABLE WITH DESCRIPTIVES
# - Read data in long format
# - Gather descriptives and save in table
#--------------------------------------------------------------------------------------------------------------
# Edit Paths
dirinput <- "O:/studies/grapholemo/analysis/LEMO_GFG/beh/"
diroutput <-  "O:/studies/grapholemo/analysis/LEMO_GFG/beh/stats/LMM_R/"
dir.create(diroutput)
# File to read
fileinput <- "LEMO_beh_fbl_long.sav"
# READ DATA
raw <- haven::read_sav(paste0(dirinput,'/',fileinput))
raw <- as.data.frame(raw)
#Prepare dataset for analysis
dat <- raw # work on a copy, keep original dataset
#Filter data (use dplyr::filteruse):
dat <- dplyr::filter(dat , (fb == 1) )
dat <- dplyr::filter(dat , (task == taskpart) )
dat <- dplyr::filter(dat , !is.na(third))
# Ensure format of your variables (as.factor or as.numeric)
dat$proportionPerThird <- as.numeric(dat$proportionPerThird  )
dat$meanRT <- as.numeric(dat$meanRT)
dat$subjID <- as.factor(dat$subjID)
dat$third    <- as.factor(dat$third)
dat$task   <- as.factor(dat$task)
dat$block   <- as.factor(dat$block)
######################################################
# CREATE TABLE WITH ACCU DATA
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="proportionPerThird",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds_gathered <-   cbind(c(rep('fbl_a',4),rep('fbl_b',4)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
colnames(ds_gathered)[1] <- 'task'
ds_gathered$summary <- paste(ds_gathered[,3],ds_gathered[,4],sep=' (') %>% paste(.,')',sep="")
writexl::write_xlsx(ds_gathered,paste0(diroutput,"/Table_accu_acrossBlocks.xlsx")) #save in file
# CREATE TABLE WITH RT
totalds<- cbind('total',Rmisc::summarySE(dat,measurevar="meanRT",groupvars = c("task")))
colnames(totalds)[1] <- 'third'
ds <-
Rmisc::summarySE(dat,measurevar="meanRT",groupvars = c("third","task")) %>%
rbind(.,totalds)  %>%
group_by(.) %>%
group_split(., task)
ds_gathered <-   cbind(c(rep('fbl_a',4),rep('fbl_b',4)),
rbind(ds[[1]][1],ds[[2]][1]),
rbind(round(cbind(ds[[1]][4],ds[[1]][5]),2),
round(cbind(ds[[2]][4],ds[[2]][5]),2)))
colnames(ds_gathered)[1] <- 'task'
ds_gathered$summary <- paste(ds_gathered[,3],ds_gathered[,4],sep=' (') %>% paste(.,')',sep="")
writexl::write_xlsx(ds_gathered,paste0(diroutput,"/Table_RTs_acrossBlocks.xlsx")) #save in file
1700/460
library(devtools)
install.packages(devtools)
install.packages('devtools')
library(devtools)
.libPaths()
install.packages('devtools',dependencies = TRUE)
library(devtools)
R.version
remotes
install.packages('remotes')
install.packages("remotes")
library(remotes)
remotes:install_github("yunshiuan/label4MRI")
remotes:::install_github("yunshiuan/label4MRI")
library(label4mri)
library(label4MRI)
mni_to_region_name(x = 0, y = 0, z = 0)
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
dat$xcoord
coords <- cbind(dat$xcoord,dat$ycoord,dat$zcoord)
coords <- cbind(dat$xcoord,dat$ycoord,dat$zcoord)
coords
coords[1,]
coords <- as.data.frame(cbind(dat$xcoord,dat$ycoord,dat$zcoord))
coords
i <- 1
label <- label4MRI::mni_to_region_name(coords[i,])
i
label <- label4MRI::mni_to_region_name(coords[i,])
label4MRI::mni_to_region_name(coords[i,])
label4MRI::mni_to_region_name(coords[i,:])
label4MRI::mni_to_region_name(coords[i,``])
coords[i,]
label <- label4MRI::mni_to_region_name(x = coords[i,1],
y= coords[i,2],
coords[i,3])
label
label <- list()
for (i in 1:nrow(coords)){
info <- label4MRI::mni_to_region_name(x = coords[i,1],
y= coords[i,2],
coords[i,3])
label[[i]] <- info$aal.label
}
label
data.table::rbindlist(label)
data.table::rbindlist(label[[]])
do.call(rbindlist,label)
do.call(rbin,label)
do.call(rbind,label)
label <- list()
#remotes:::install_github("yunshiuan/label4MRI")
library(label4MRI)
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
coords <- as.data.frame(cbind(dat$xcoord,dat$ycoord,dat$zcoord))
label <- list()
distances <- list()
for (i in 1:nrow(coords)){
info <- label4MRI::mni_to_region_name(x = coords[i,1],
y= coords[i,2],
coords[i,3])
label[[i]] <- info$aal.label
distances[[i]] <- info$aal.distance
}
cbind(do.call(rbind,label),
do.call(rbind,distances))
#remotes:::install_github("yunshiuan/label4MRI")
library(label4MRI)
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
coords <- as.data.frame(cbind(dat$xcoord,dat$ycoord,dat$zcoord))
label <- list()
distances <- list()
for (i in 1:nrow(coords)){
info <- label4MRI::mni_to_region_name(x = coords[i,1],
y= coords[i,2],
coords[i,3])
label[[i]] <- info$aal.label
distances[[i]] <- info$aal.distance
}
cbind(do.call(rbind,label),
do.call(rbind,round(as.numeric(distances),2)))
distances
#remotes:::install_github("yunshiuan/label4MRI")
library(label4MRI)
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
coords <- as.data.frame(cbind(dat$xcoord,dat$ycoord,dat$zcoord))
label <- list()
distances <- list()
for (i in 1:nrow(coords)){
info <- label4MRI::mni_to_region_name(x = coords[i,1],
y= coords[i,2],
coords[i,3])
label[[i]] <- info$aal.label
distances[[i]] <- info$aal.distance
}
cbind(do.call(rbind,label),
do.call(rbind,distances))
info$aal.distance
#remotes:::install_github("yunshiuan/label4MRI")
library(label4MRI)
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
coords <- as.data.frame(cbind(dat$xcoord,dat$ycoord,dat$zcoord))
label <- list()
distances <- list()
for (i in 1:nrow(coords)){
info <- label4MRI::mni_to_region_name(x = coords[i,1],
y= coords[i,2],
coords[i,3])
label[[i]] <- info$aal.label
distances[[i]] <- round(info$aal.distance,2)
}
cbind(do.call(rbind,label),
do.call(rbind,distances))
coords
myregions <- cbind(do.call(rbind,label),
do.call(rbind,distances))
c(coords,myregions)
cbind(coords,myregions)
tab2save <- cbind(coords,myregions)
colnames(tab2save) <- c('x','y','z','aal','dist')
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri'
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/'
#remotes:::install_github("yunshiuan/label4MRI")
library(label4MRI)
# SEARCH MNI LABELS FROM A SET OF COORDINATES
#-------------------------------------------------------
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/'
dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
coords <- as.data.frame(cbind(dat$xcoord,dat$ycoord,dat$zcoord))
label <- list()
distances <- list()
for (i in 1:nrow(coords)){
info <- label4MRI::mni_to_region_name(x = coords[i,1],
y= coords[i,2],
coords[i,3])
label[[i]] <- info$aal.label
distances[[i]] <- round(info$aal.distance,2)
}
myregions <- cbind(do.call(rbind,label),
do.call(rbind,distances))
tab2save <- cbind(coords,myregions)
colnames(tab2save) <- c('x','y','z','aal','dist')
#save
writexl::write_xlsx(tab2save,paste0(diroutput,'summary_regions.xlsx'))
install.packages('htmltools')
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
**Knit**
install.packages('rmarkdown')
library(rmarkdown)
install.packages("tinytex")
library(tinytex)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(jpg)
library(jpeg)
readJPEG(paste0(dirpics,'/',filepics))
readJPEG(system.file("img",paste0(dirpics,'/',filepics), package="jpeg"))
readJPEG(system.file("img",paste0(dirpics,'/',filepics[1]), package="jpeg"))
dirpics <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/visualizations_mricrogl'
filepics <- dir(dirpics,pattern = '*.png')
library(jpeg)
readJPEG(system.file("img",paste0(dirpics,'/',filepics[1]), package="jpeg"))
paste0(dirpics,'/',filepics[1])
library(png)
readPNG(system.file("img",paste0(dirpics,'/',filepics[1]), package="jpeg"))
readPNG(system.file("img",paste0(dirpics,'/',filepics[1]), package="png"))
paste0(dirpics,'/',filepics[1])paste0(dirpics,'/',filepics[1])
paste0(dirpics,'/',filepics[1])
readPNG(system.file("img", paste0(dirpics,'/',filepics[1]), package="png"))
setwd(dirpics)
readPNG(system.file("img",filepics[1], package="png"))
filepics[1]
getwd()
setwd(dirpics)
getwd()
dev.off()
installed.packages()
library('cmdstanr')
setwd('N:/studies/Grapholemo/Methods/Scripts/grapholemo/Rshiny_correlations_alaCarte')
runApp()
library('rshiny')
library(shiny)
runApp()
#rm(list=ls(all=TRUE))#clear all
#-------------------------------------------------------------------------------
# REGRESSION PLOTS with Correlations
#-------------------------------------------------------------------------------
# read data
alldat <- haven::read_sav('LEMO_cogni_fbl.sav')
runApp()
