tmptbl <- do.call(rbind,tmptbl)
tbl[[t]] <- tmptbl
}
tbl <- do.call(rbind,tbl)
#  SEARCH ANATOMICAL LABELS AND MERGE WITH TABLE
#-------------------------------------------------------
#
#dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
dat <- tbl
dat$xcoord <- as.numeric(dat$xcoord)
dat$ycoord <- as.numeric(dat$ycoord)
dat$zcoord <- as.numeric(dat$zcoord)
label <- list()
distances <- list()
for (i in 1:nrow(dat)){
info <- label4MRI::mni_to_region_name(x = dat$xcoord[i],
y= dat$ycoord[i],
z = dat$zcoord[i],
template = "aal")
label[[i]] <- info$aal.label
distances[[i]] <- round(info$aal.distance,2)
}
myregions <- cbind(do.call(rbind,label),
do.call(rbind,distances))
colnames(myregions) <- c('aal','dist')
tab2save <- cbind(tbl,myregions)
#save
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'.xlsx'))
#remotes:::install_github("yunshiuan/label4MRI")
rm(list =ls())
library(label4MRI)
#  # Optional merger of result tables from different contrasts and task
#-----------------------------------------------------------------
basedirinput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel/'
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel/'
glmversion <- '2Lv_GLM0_mopa_aspe'
model <- 'LEMO_rlddm_v31'
summaryFoldername <- 'summary_withFWE'
tasks <- c('FBL_A','FBL_B')
#tasks <- c('FBL_AB')
tbl <- list()
for (t in 1:length(tasks)){
dirinput  <- paste0(basedirinput,tasks[t],'/',glmversion,'/',summaryFoldername,'/')
if (grepl('*pairedTs',basedirinput)){
dirinput <- paste0(basedirinput,glmversion,'/',summaryFoldername,'/')
}else if (grepl('mopa',glmversion)){
dirinput  <- paste0(basedirinput,tasks[t],'/',model,'/',glmversion,'/',summaryFoldername,'/')
}
setwd(dirinput)
files <- dir(dirinput,'^Results.*.*.xlsx')
tmptbl <- list()
for (f in 1:length(files)){
tmp <- readxl::read_xlsx(paste0(dirinput,files[f]))
tmp$file <- gsub('Results_Table',paste0(tasks[t],'_',glmversion),tmp$file)
tmptbl[[f]]   <- tmp
}
tmptbl <- do.call(rbind,tmptbl)
tbl[[t]] <- tmptbl
}
tbl <- do.call(rbind,tbl)
#  SEARCH ANATOMICAL LABELS AND MERGE WITH TABLE
#-------------------------------------------------------
#
#dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
dat <- tbl
dat$xcoord <- as.numeric(dat$xcoord)
dat$ycoord <- as.numeric(dat$ycoord)
dat$zcoord <- as.numeric(dat$zcoord)
label <- list()
distances <- list()
for (i in 1:nrow(dat)){
info <- label4MRI::mni_to_region_name(x = dat$xcoord[i],
y= dat$ycoord[i],
z = dat$zcoord[i],
template = "aal")
label[[i]] <- info$aal.label
distances[[i]] <- round(info$aal.distance,2)
}
myregions <- cbind(do.call(rbind,label),
do.call(rbind,distances))
colnames(myregions) <- c('aal','dist')
tab2save <- cbind(tbl,myregions)
#save
if (grepl('withFWE',summaryFoldername)){
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'_withFWE.xlsx'))
} else {
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'.xlsx'))
}
tab2save
tab2save$cluster_pFWE
as.numeric(tab2save$cluster_pFWE)
#remotes:::install_github("yunshiuan/label4MRI")
rm(list =ls())
library(label4MRI)
#  # Optional merger of result tables from different contrasts and task
#-----------------------------------------------------------------
basedirinput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel/'
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel/'
glmversion <- '2Lv_GLM0_mopa_aspe'
model <- 'LEMO_rlddm_v31'
summaryFoldername <- 'summary_withFWE'
tasks <- c('FBL_A','FBL_B')
#tasks <- c('FBL_AB')
tbl <- list()
for (t in 1:length(tasks)){
dirinput  <- paste0(basedirinput,tasks[t],'/',glmversion,'/',summaryFoldername,'/')
if (grepl('*pairedTs',basedirinput)){
dirinput <- paste0(basedirinput,glmversion,'/',summaryFoldername,'/')
}else if (grepl('mopa',glmversion)){
dirinput  <- paste0(basedirinput,tasks[t],'/',model,'/',glmversion,'/',summaryFoldername,'/')
}
setwd(dirinput)
files <- dir(dirinput,'^Results.*.*.xlsx')
tmptbl <- list()
for (f in 1:length(files)){
tmp <- readxl::read_xlsx(paste0(dirinput,files[f]))
tmp$file <- gsub('Results_Table',paste0(tasks[t],'_',glmversion),tmp$file)
tmptbl[[f]]   <- tmp
}
tmptbl <- do.call(rbind,tmptbl)
tbl[[t]] <- tmptbl
}
tbl <- do.call(rbind,tbl)
#  SEARCH ANATOMICAL LABELS AND MERGE WITH TABLE
#-------------------------------------------------------
#
#dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
dat <- tbl
dat$xcoord <- as.numeric(dat$xcoord)
dat$ycoord <- as.numeric(dat$ycoord)
dat$zcoord <- as.numeric(dat$zcoord)
label <- list()
distances <- list()
for (i in 1:nrow(dat)){
info <- label4MRI::mni_to_region_name(x = dat$xcoord[i],
y= dat$ycoord[i],
z = dat$zcoord[i],
template = "aal")
label[[i]] <- info$aal.label
distances[[i]] <- round(info$aal.distance,2)
}
myregions <- cbind(do.call(rbind,label),
do.call(rbind,distances))
colnames(myregions) <- c('aal','dist')
tab2save <- cbind(tbl,myregions)
#some formatting
tab2save$cluster_pFWE <- as.numeric(tab2save$cluster_pFWE)
tab2save$peak_T <- as.numeric(tab2save$peak_T)
tab2save$peak_Z <- as.numeric(tab2save$peak_Z)
tab2save$peak_pFWE <- as.numeric(tab2save$peak_pFWE)
#save
if (grepl('withFWE',summaryFoldername)){
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'_withFWE.xlsx'))
} else {
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'.xlsx'))
}
# READ CSV FILES WITH TABLE OF RESULTS
rm(list=ls())
dirinput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel_pairedTs/LEMO_rlddm_v31/2Lv_GLM0_mopa_aspe/summary_withFWE/'
diroutput <- dirinput
for (i in 2:9) {
fileinput <- paste0('Results_Table_con_000',i,'_2.txt')
print(fileinput)
# Read table
#-----------------------
setwd(dirinput)
dat <- read.delim(fileinput,sep="\t",skip=1)
# trim , leave only clusteres wehre FWE corr is < 0.05
trimdat <- dat[which(dat$p.FWE.corr. < 0.05),]
colnames(trimdat)[(ncol(trimdat)-2):ncol(trimdat)] <- c('xcoord','ycoord','zcoord')
if (nrow(trimdat)==0){
print(paste0('no suprathreshold results in ',fileinput))
} else {
#  Format for saving
myT<- cbind(fileinput,
trimdat$xcoord,
trimdat$ycoord,
trimdat$zcoord,
round(trimdat$p.FWE.corr.,4),
round(trimdat$p.unc.,4),
round(trimdat$equivk,2),
round(trimdat$equivZ,2),
round(trimdat$T,2),
round(trimdat$p.FWE.corr..1,4),
round(trimdat$p.unc..1,4),
round(min(dat$T),3))
myT <- as.data.frame(myT)
colnames(myT) <- c('file','xcoord','ycoord','zcoord','cluster_pFWE','cluster_punc','cluster_k','peak_Z','peak_T','peak_pFWE','peak_punc','T_heightThresh')
# save
writexl::write_xlsx(myT,paste0(diroutput,'/',gsub('.txt','_clean.xlsx',fileinput)))
}
}
# READ CSV FILES WITH TABLE OF RESULTS
rm(list=ls())
dirinput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel_pairedTs/LEMO_rlddm_v31/2Lv_GLM0_mopa_aspe/summary_withFWE/'
diroutput <- dirinput
for (i in 2:9) {
fileinput <- paste0('Results_Table_con_000',i,'_1.txt')
print(fileinput)
# Read table
#-----------------------
setwd(dirinput)
dat <- read.delim(fileinput,sep="\t",skip=1)
# trim , leave only clusteres wehre FWE corr is < 0.05
trimdat <- dat[which(dat$p.FWE.corr. < 0.05),]
colnames(trimdat)[(ncol(trimdat)-2):ncol(trimdat)] <- c('xcoord','ycoord','zcoord')
if (nrow(trimdat)==0){
print(paste0('no suprathreshold results in ',fileinput))
} else {
#  Format for saving
myT<- cbind(fileinput,
trimdat$xcoord,
trimdat$ycoord,
trimdat$zcoord,
round(trimdat$p.FWE.corr.,4),
round(trimdat$p.unc.,4),
round(trimdat$equivk,2),
round(trimdat$equivZ,2),
round(trimdat$T,2),
round(trimdat$p.FWE.corr..1,4),
round(trimdat$p.unc..1,4),
round(min(dat$T),3))
myT <- as.data.frame(myT)
colnames(myT) <- c('file','xcoord','ycoord','zcoord','cluster_pFWE','cluster_punc','cluster_k','peak_Z','peak_T','peak_pFWE','peak_punc','T_heightThresh')
# save
writexl::write_xlsx(myT,paste0(diroutput,'/',gsub('.txt','_clean.xlsx',fileinput)))
}
}
# READ CSV FILES WITH TABLE OF RESULTS
rm(list=ls())
dirinput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel_pairedTs/LEMO_rlddm_v31/2Lv_GLM0_mopa_aspe/summary/'
diroutput <- dirinput
for (i in 2:9) {
fileinput <- paste0('Results_Table_con_000',i,'_1.txt')
print(fileinput)
# Read table
#-----------------------
setwd(dirinput)
dat <- read.delim(fileinput,sep="\t",skip=1)
# trim , leave only clusteres wehre FWE corr is < 0.05
trimdat <- dat[which(dat$p.FWE.corr. < 0.05),]
colnames(trimdat)[(ncol(trimdat)-2):ncol(trimdat)] <- c('xcoord','ycoord','zcoord')
if (nrow(trimdat)==0){
print(paste0('no suprathreshold results in ',fileinput))
} else {
#  Format for saving
myT<- cbind(fileinput,
trimdat$xcoord,
trimdat$ycoord,
trimdat$zcoord,
round(trimdat$p.FWE.corr.,4),
round(trimdat$p.unc.,4),
round(trimdat$equivk,2),
round(trimdat$equivZ,2),
round(trimdat$T,2),
round(trimdat$p.FWE.corr..1,4),
round(trimdat$p.unc..1,4),
round(min(dat$T),3))
myT <- as.data.frame(myT)
colnames(myT) <- c('file','xcoord','ycoord','zcoord','cluster_pFWE','cluster_punc','cluster_k','peak_Z','peak_T','peak_pFWE','peak_punc','T_heightThresh')
# save
writexl::write_xlsx(myT,paste0(diroutput,'/',gsub('.txt','_clean.xlsx',fileinput)))
}
}
# READ CSV FILES WITH TABLE OF RESULTS
rm(list=ls())
dirinput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel_pairedTs/LEMO_rlddm_v31/2Lv_GLM0_mopa_aspe/summary/'
diroutput <- dirinput
for (i in 2:9) {
fileinput <- paste0('Results_Table_con_000',i,'_2.txt')
print(fileinput)
# Read table
#-----------------------
setwd(dirinput)
dat <- read.delim(fileinput,sep="\t",skip=1)
# trim , leave only clusteres wehre FWE corr is < 0.05
trimdat <- dat[which(dat$p.FWE.corr. < 0.05),]
colnames(trimdat)[(ncol(trimdat)-2):ncol(trimdat)] <- c('xcoord','ycoord','zcoord')
if (nrow(trimdat)==0){
print(paste0('no suprathreshold results in ',fileinput))
} else {
#  Format for saving
myT<- cbind(fileinput,
trimdat$xcoord,
trimdat$ycoord,
trimdat$zcoord,
round(trimdat$p.FWE.corr.,4),
round(trimdat$p.unc.,4),
round(trimdat$equivk,2),
round(trimdat$equivZ,2),
round(trimdat$T,2),
round(trimdat$p.FWE.corr..1,4),
round(trimdat$p.unc..1,4),
round(min(dat$T),3))
myT <- as.data.frame(myT)
colnames(myT) <- c('file','xcoord','ycoord','zcoord','cluster_pFWE','cluster_punc','cluster_k','peak_Z','peak_T','peak_pFWE','peak_punc','T_heightThresh')
# save
writexl::write_xlsx(myT,paste0(diroutput,'/',gsub('.txt','_clean.xlsx',fileinput)))
}
}
#remotes:::install_github("yunshiuan/label4MRI")
rm(list =ls())
library(label4MRI)
#  # Optional merger of result tables from different contrasts and task
#-----------------------------------------------------------------
basedirinput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel_pairedTs/'
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel_pairedTs/'
glmversion <- '2Lv_GLM0_mopa_aspe'
model <- 'LEMO_rlddm_v31'
summaryFoldername <- 'summary_withFWE'
tasks <- c('FBL_A','FBL_B')
#tasks <- c('FBL_AB')
tbl <- list()
for (t in 1:length(tasks)){
dirinput  <- paste0(basedirinput,tasks[t],'/',glmversion,'/',summaryFoldername,'/')
if (grepl('*pairedTs',basedirinput)){
dirinput <- paste0(basedirinput,glmversion,'/',summaryFoldername,'/')
}else if (grepl('mopa',glmversion)){
dirinput  <- paste0(basedirinput,tasks[t],'/',model,'/',glmversion,'/',summaryFoldername,'/')
}
setwd(dirinput)
files <- dir(dirinput,'^Results.*.*.xlsx')
tmptbl <- list()
for (f in 1:length(files)){
tmp <- readxl::read_xlsx(paste0(dirinput,files[f]))
tmp$file <- gsub('Results_Table',paste0(tasks[t],'_',glmversion),tmp$file)
tmptbl[[f]]   <- tmp
}
tmptbl <- do.call(rbind,tmptbl)
tbl[[t]] <- tmptbl
}
tbl <- do.call(rbind,tbl)
#  SEARCH ANATOMICAL LABELS AND MERGE WITH TABLE
#-------------------------------------------------------
#
#dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
dat <- tbl
dat$xcoord <- as.numeric(dat$xcoord)
dat$ycoord <- as.numeric(dat$ycoord)
dat$zcoord <- as.numeric(dat$zcoord)
label <- list()
distances <- list()
for (i in 1:nrow(dat)){
info <- label4MRI::mni_to_region_name(x = dat$xcoord[i],
y= dat$ycoord[i],
z = dat$zcoord[i],
template = "aal")
label[[i]] <- info$aal.label
distances[[i]] <- round(info$aal.distance,2)
}
myregions <- cbind(do.call(rbind,label),
do.call(rbind,distances))
colnames(myregions) <- c('aal','dist')
tab2save <- cbind(tbl,myregions)
#some formatting
tab2save$cluster_pFWE <- as.numeric(tab2save$cluster_pFWE)
tab2save$peak_T <- as.numeric(tab2save$peak_T)
tab2save$peak_Z <- as.numeric(tab2save$peak_Z)
tab2save$peak_pFWE <- as.numeric(tab2save$peak_pFWE)
#save
if (grepl('withFWE',summaryFoldername)){
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'_withFWE.xlsx'))
} else {
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'.xlsx'))
}
tab2save$cluster_pFWE <- as.numeric(tab2save$cluster_pFWE)paste0(basedirinput,tasks[t],'/',model,'/',glmversion,'/',summaryFoldername,'/')
dirinput
dirinput  <- paste0(basedirinput,tasks[t],'/',glmversion,'/',summaryFoldername,'/')
if (grepl('*pairedTs',basedirinput)){
dirinput <- paste0(basedirinput,glmversion,'/',summaryFoldername,'/')
}else if (grepl('mopa',glmversion)){
dirinput  <- paste0(basedirinput,tasks[t],'/',model,'/',glmversion,'/',summaryFoldername,'/')
}
dirinput
tasks
grepl('mopa',glmversion)
paste0(basedirinput,'/',model,'/',glmversion,'/',summaryFoldername,'/')
dirinput  <- paste0(basedirinput,tasks[t],'/',glmversion,'/',summaryFoldername,'/')
if (grepl('*pairedTs',basedirinput)){
dirinput <- paste0(basedirinput,glmversion,'/',summaryFoldername,'/')
}else if (grepl('mopa',glmversion)){
dirinput  <- paste0(basedirinput,model,'/',glmversion,'/',summaryFoldername,'/')
}
dirinput
rm(dirinput)
dirinput  <- paste0(basedirinput,tasks[t],'/',glmversion,'/',summaryFoldername,'/')
if (grepl('*pairedTs',basedirinput)){
dirinput <- paste0(basedirinput,glmversion,'/',summaryFoldername,'/')
}else if (grepl('mopa',glmversion)){
dirinput  <- paste0(basedirinput,model,'/',glmversion,'/',summaryFoldername,'/')
}
se
dirinput
dirinput  <- paste0(basedirinput,tasks[t],'/',glmversion,'/',summaryFoldername,'/')
if (grepl('*pairedTs',basedirinput)){
dirinput <- paste0(basedirinput,glmversion,'/',summaryFoldername,'/')
}
if (grepl('mopa',glmversion)){
dirinput  <- paste0(basedirinput,model,'/',glmversion,'/',summaryFoldername,'/')
}
dirinput
#remotes:::install_github("yunshiuan/label4MRI")
rm(list =ls())
library(label4MRI)
#  # Optional merger of result tables from different contrasts and task
#-----------------------------------------------------------------
basedirinput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel_pairedTs/'
diroutput <- 'O:/studies/grapholemo/analysis/LEMO_GFG/mri/2ndLevel_pairedTs/'
glmversion <- '2Lv_GLM0_mopa_aspe'
model <- 'LEMO_rlddm_v31'
summaryFoldername <- 'summary_withFWE'
tasks <- c('FBL_A','FBL_B')
#tasks <- c('FBL_AB')
tbl <- list()
for (t in 1:length(tasks)){
dirinput  <- paste0(basedirinput,tasks[t],'/',glmversion,'/',summaryFoldername,'/')
if (grepl('*pairedTs',basedirinput)){
dirinput <- paste0(basedirinput,glmversion,'/',summaryFoldername,'/')
}
if (grepl('mopa',glmversion)){
dirinput  <- paste0(basedirinput,model,'/',glmversion,'/',summaryFoldername,'/')
}
setwd(dirinput)
files <- dir(dirinput,'^Results.*.*.xlsx')
tmptbl <- list()
for (f in 1:length(files)){
tmp <- readxl::read_xlsx(paste0(dirinput,files[f]))
tmp$file <- gsub('Results_Table',paste0(tasks[t],'_',glmversion),tmp$file)
tmptbl[[f]]   <- tmp
}
tmptbl <- do.call(rbind,tmptbl)
tbl[[t]] <- tmptbl
}
tbl <- do.call(rbind,tbl)
#  SEARCH ANATOMICAL LABELS AND MERGE WITH TABLE
#-------------------------------------------------------
#
#dat <- readxl::read_xlsx('O:/studies/grapholemo/analysis/LEMO_GFG/mri/Summaries_manualCombi.xlsx')
dat <- tbl
dat$xcoord <- as.numeric(dat$xcoord)
dat$ycoord <- as.numeric(dat$ycoord)
dat$zcoord <- as.numeric(dat$zcoord)
label <- list()
distances <- list()
for (i in 1:nrow(dat)){
info <- label4MRI::mni_to_region_name(x = dat$xcoord[i],
y= dat$ycoord[i],
z = dat$zcoord[i],
template = "aal")
label[[i]] <- info$aal.label
distances[[i]] <- round(info$aal.distance,2)
}
myregions <- cbind(do.call(rbind,label),
do.call(rbind,distances))
colnames(myregions) <- c('aal','dist')
tab2save <- cbind(tbl,myregions)
#some formatting
tab2save$cluster_pFWE <- as.numeric(tab2save$cluster_pFWE)
tab2save$peak_T <- as.numeric(tab2save$peak_T)
tab2save$peak_Z <- as.numeric(tab2save$peak_Z)
tab2save$peak_pFWE <- as.numeric(tab2save$peak_pFWE)
#save
if (grepl('withFWE',summaryFoldername)){
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'_withFWE.xlsx'))
} else {
writexl::write_xlsx(tab2save,paste0(diroutput,'Result_regions_',glmversion,'.xlsx'))
}
read.table('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
scan('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
x <- read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
x
x[12]
x[1]
x[1,2]
x[1]
x[2]
x[1]
grep('#save',x)
library("reader")
library("readr")
read_file('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
x <- read_file('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
x
read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep ='\t')
read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep ='\t')
x <- read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep ='\t')
x <- read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep=' ')
read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep ='\t')
x <- read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep='\t')
read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep ='\t')
read_lines('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep='\t')
read.delim('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py',sep ='\t')
read_lines('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
x <- read_lines('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/LEMO_mriCro_test.py')
x [1]
x [3]
x [2]
x [5]
x [6 ]
x [6]
x [636]
x [66]
grep('mosaic',x)
x[grep('mosaic',x)]
x[10] <- "xxxxxxxxxxxxxxxxxxxxxxxxxxxyeeeeeeeeeah"
x
setwd('N:/studies/Grapholemo/Methods/Scripts/grapholemo/MR_plots and tables/mricrogl_scripts/')
write_lines(x,'tstm.py')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
